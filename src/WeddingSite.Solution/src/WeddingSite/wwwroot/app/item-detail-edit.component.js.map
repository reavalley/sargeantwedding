{"version":3,"sources":["item-detail-edit.component.ts"],"names":["ItemDetailEditComponent","authService","itemService","router","activatedRoute","this","prototype","ngOnInit","_this","isLoggedIn","navigate","id","snapshot","params","get","subscribe","item","console","log","item_1","Item","onInsert","add","data","Id","error","onUpdate","update","onDelete","delete","onBack","onItemDetailView","__decorate","core_1","Component","moduleId","__moduleName","selector","templateUrl","auth_service_1","AuthService","item_service_1","ItemService","router_1","Router","ActivatedRoute"],"mappings":"qmCAYAA,wBAAA,WAGI,QAAAA,yBACYC,YACAC,YACAC,OACAC,gBAHAC,KAAAJ,YAAAA,YACAI,KAAAH,YAAAA,YACAG,KAAAF,OAAAA,OACAE,KAAAD,eAAAA,eA8DhB,MA3DIJ,yBAAAM,UAAAC,SAAA,WAAA,GAAAC,OAAAH,IACSA,MAAKJ,YAAYQ,cAClBJ,KAAKF,OAAOO,UAAU,IAE1B,IAAIC,KAAON,KAAKD,eAAeQ,SAASC,OAAW,EAE/CF,IACAN,KAAKH,YAAYY,IAAIH,IAAII,UAAU,SAAAC,MAAQ,MAAAR,OAAKQ,KAAOA,OAE3C,IAAPL,IACLM,QAAQC,IAAI,iCACZb,KAAKW,KAAO,GAAIG,QAAAC,KAAK,EAAG,WAAY,QAGpCH,QAAQC,IAAI,uCACZb,KAAKF,OAAOO,UAAU,OAI9BV,wBAAAM,UAAAe,SAAA,SAASL,MAAT,GAAAR,OAAAH,IACIA,MAAKH,YAAYoB,IAAIN,MAAMD,UACvB,SAACQ,MACGf,MAAKQ,KAAOO,KACZN,QAAQC,IAAI,QAAUV,MAAKQ,KAAKQ,GAAK,mBACrChB,MAAKL,OAAOO,UAAU,MAE1B,SAACe,OAAU,MAAAR,SAAQC,IAAIO,UAI/BzB,wBAAAM,UAAAoB,SAAA,SAASV,MAAT,GAAAR,OAAAH,IACIA,MAAKH,YAAYyB,OAAOX,MAAMD,UAC1B,SAACQ,MACGf,MAAKQ,KAAOO,KACZN,QAAQC,IAAI,QAAUV,MAAKQ,KAAKQ,GAAK,qBACrChB,MAAKL,OAAOO,UAAU,YAAaF,MAAKQ,KAAKQ,MAEjD,SAACC,OAAU,MAAAR,SAAQC,IAAIO,UAI/BzB,wBAAAM,UAAAsB,SAAA,SAASZ,MAAT,GAAAR,OAAAH,KACQM,GAAKK,KAAKQ,EACdnB,MAAKH,YAAY2B,OAAOlB,IAAII,UACxB,SAACQ,MACGN,QAAQC,IAAI,QAAUP,GAAK,qBAC3BH,MAAKL,OAAOO,UAAU,MAE1B,SAACe,OAAU,MAAAR,SAAQC,IAAIO,UAI/BzB,wBAAAM,UAAAwB,OAAA,WACIzB,KAAKF,OAAOO,UAAU,MAG1BV,wBAAAM,UAAAyB,iBAAA,SAAiBf,MACbX,KAAKF,OAAOO,UAAU,YAAaM,KAAKQ,MAEhDxB,2BArEAA,wBAAAgC,YANCC,OAAAC,WACGC,SAAUC,aACVC,SAAU,mBACVC,YAAa,oEAOYC,eAAAC,YACAC,eAAAC,YACLC,SAAAC,OACQD,SAAAE,+EAPnB7C","file":"item-detail-edit.component.js","sourcesContent":["import {Component, OnInit} from \"@angular/core\";\r\nimport {Router, ActivatedRoute} from \"@angular/router\";\r\nimport {Item} from \"./item\";\r\nimport {ItemService} from \"./item.service\";\r\nimport {AuthService} from \"./auth.service\";\r\n\r\n@Component({\r\n    moduleId: __moduleName,\r\n    selector: \"item-detail-edit\",\r\n    templateUrl: \"item-detail-edit.component.html\"\r\n})\r\n\r\nexport class ItemDetailEditComponent {\r\n    item: Item;\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private itemService: ItemService,\r\n        private router: Router,\r\n        private activatedRoute: ActivatedRoute) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (!this.authService.isLoggedIn()) {\r\n            this.router.navigate([\"\"]);\r\n        }\r\n        var id = + this.activatedRoute.snapshot.params[\"id\"];\r\n\r\n        if (id) {\r\n            this.itemService.get(id).subscribe(item => this.item = item);            \r\n        }\r\n        else if (id === 0) {\r\n            console.log(\"id is 0: adding a new item...\");\r\n            this.item = new Item(0, \"New Item\", null);\r\n        }\r\n        else {\r\n            console.log(\"Invalid id: routing back to home...\");\r\n            this.router.navigate([\"\"]);\r\n        }\r\n    }\r\n\r\n    onInsert(item: Item) {\r\n        this.itemService.add(item).subscribe(\r\n            (data) => {\r\n                this.item = data;\r\n                console.log(\"Item \" + this.item.Id + \" has been added\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onUpdate(item: Item) {\r\n        this.itemService.update(item).subscribe(\r\n            (data) => {\r\n                this.item = data;\r\n                console.log(\"Item \" + this.item.Id + \" has been updated\");\r\n                this.router.navigate([\"item/view\", this.item.Id]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onDelete(item: Item) {\r\n        var id = item.Id;\r\n        this.itemService.delete(id).subscribe(\r\n            (data) => {\r\n                console.log(\"Item \" + id + \" has been deleted\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onBack() {\r\n        this.router.navigate([\"\"]);\r\n    }\r\n\r\n    onItemDetailView(item: Item) {\r\n        this.router.navigate([\"item/view\", item.Id]);\r\n    }\r\n}"]}