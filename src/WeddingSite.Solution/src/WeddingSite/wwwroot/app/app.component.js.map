{"version":3,"sources":["app.component.ts"],"names":["AppComponent","router","authService","zone","this","title","window","externalProviderLogin","self","auth","run","prototype","isActive","data","createUrlTree","logout","_this","subscribe","result","navigate","setAuth","console","log","getAuth","providerName","__decorate","core_1","Component","moduleId","__moduleName","selector","templateUrl","router_1","Router","auth_service_1","AuthService","NgZone"],"mappings":"08BASAA,aAAA,WAGI,QAAAA,cAAmBC,OAAuBC,YAAiCC,MACvE,GADeC,KAAAH,OAAAA,OAAuBG,KAAAF,YAAAA,YAAiCE,KAAAD,KAAAA,KAF3EC,KAAAC,MAAQ,eAGOC,OAAQC,sBAAuB,CACtC,GAAIC,MAAOJ,IAELE,QAAQC,sBAAwB,SAAUE,MAC5CD,KAAKL,KAAKO,IAAI,WACVF,KAAKD,sBAAsBE,UA2B/C,MArBIT,cAAAW,UAAAC,SAAA,SAASC,MACL,MAAOT,MAAKH,OAAOW,SAASR,KAAKH,OAAOa,cAAcD,OAAO,IAGjEb,aAAAW,UAAAI,OAAA,WAAA,GAAAC,OAAAZ,IAQI,OAPAA,MAAKF,YAAYa,SAASE,UAAU,SAAAC,QAE5BA,QACAF,MAAKf,OAAOkB,UAAU,QAIvB,GAGXnB,aAAAW,UAAAJ,sBAAA,SAAsBE,MAClBL,KAAKF,YAAYkB,QAAQX,MAEzBY,QAAQC,IAAI,wCAA0ClB,KAAKF,YAAYqB,UAAUC,cACjFpB,KAAKH,OAAOkB,UAAU,MAE9BnB,gBApCAA,aAAAyB,YALCC,OAAAC,WACGC,SAAUC,aACVC,SAAU,cACVC,YAAa,uDAKcC,SAAAC,OAA4BC,eAAAC,YAA0BT,OAAAU,iDAHxEpC","file":"app.component.js","sourcesContent":["import {Component, NgZone} from \"@angular/core\";\r\nimport {Router} from \"@angular/router\";\r\nimport {AuthService} from \"./auth.service\";\r\n\r\n@Component({\r\n    moduleId: __moduleName,\r\n    selector: \"weddingsite\",\r\n    templateUrl: \"app.component.html\"\r\n})\r\nexport class AppComponent {\r\n    title = \"WeddingSite\";\r\n\r\n    constructor(public router: Router, public authService: AuthService, public zone: NgZone) {\r\n        if (!(<any>window).externalProviderLogin) {\r\n            var self = this;\r\n\r\n            (<any>window).externalProviderLogin = function (auth) {\r\n                self.zone.run(() => {\r\n                    self.externalProviderLogin(auth);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    isActive(data: any[]): boolean {\r\n        return this.router.isActive(this.router.createUrlTree(data), true);       \r\n    }\r\n\r\n    logout(): boolean {\r\n        this.authService.logout().subscribe(result => {\r\n\r\n            if (result) {\r\n                this.router.navigate([\"\"]);\r\n            }\r\n        });\r\n           \r\n        return false;\r\n    }\r\n\r\n    externalProviderLogin(auth: any) {\r\n        this.authService.setAuth(auth);\r\n\r\n        console.log(\"External Login successful! Provider: \" + this.authService.getAuth().providerName);\r\n        this.router.navigate([\"\"]);\r\n    }\r\n} "]}