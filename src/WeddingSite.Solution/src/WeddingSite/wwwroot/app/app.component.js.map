{"version":3,"sources":["app.component.ts"],"names":["AppComponent","router","authService","zone","this","title","window","externalProviderLogin","self","auth","run","prototype","getUserName","isLoggedIn","get","subscribe","user","IsSocialLogin","Email","UserName","isActive","data","createUrlTree","logout","_this","result","navigate","setAuth","console","log","getAuth","providerName","__decorate","core_1","Component","moduleId","__moduleName","selector","templateUrl","router_1","Router","auth_service_1","AuthService","NgZone"],"mappings":"08BASAA,aAAA,WAII,QAAAA,cAAmBC,OAAuBC,YAAiCC,MACvE,GADeC,KAAAH,OAAAA,OAAuBG,KAAAF,YAAAA,YAAiCE,KAAAD,KAAAA,KAH3EC,KAAAC,MAAQ,4BAIOC,OAAQC,sBAAuB,CACtC,GAAIC,MAAOJ,IAELE,QAAQC,sBAAwB,SAAUE,MAC5CD,KAAKL,KAAKO,IAAI,WACVF,KAAKD,sBAAsBE,UA+C/C,MAzCIT,cAAAW,UAAAC,YAAA,WAaI,MAZIR,MAAKS,cACLT,KAAKF,YAAYY,MAAMC,UACnB,SAAAC,MACI,MAAIA,MAAKC,cACED,KAAKE,MAGLF,KAAKG,WAKrB,IAGXnB,aAAAW,UAAAS,SAAA,SAASC,MACL,MAAOjB,MAAKH,OAAOmB,SAAShB,KAAKH,OAAOqB,cAAcD,OAAO,IAGjErB,aAAAW,UAAAE,WAAA,WACI,MAAOT,MAAKF,YAAYW,cAG5Bb,aAAAW,UAAAY,OAAA,WAAA,GAAAC,OAAApB,IAQI,OAPAA,MAAKF,YAAYqB,SAASR,UAAU,SAAAU,QAE5BA,QACAD,MAAKvB,OAAOyB,UAAU,QAIvB,GAGX1B,aAAAW,UAAAJ,sBAAA,SAAsBE,MAClBL,KAAKF,YAAYyB,QAAQlB,MAEzBmB,QAAQC,IAAI,wCAA0CzB,KAAKF,YAAY4B,UAAUC,cACjF3B,KAAKH,OAAOyB,UAAU,MAE9B1B,gBAzDAA,aAAAgC,YALCC,OAAAC,WACGC,SAAUC,aACVC,SAAU,cACVC,YAAa,uDAMcC,SAAAC,OAA4BC,eAAAC,YAA0BT,OAAAU,iDAJxE3C","file":"app.component.js","sourcesContent":["import {Component, NgZone} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {AuthService} from \"./auth.service\";\n\n@Component({\n    moduleId: __moduleName,\n    selector: \"weddingsite\",\n    templateUrl: \"app.component.html\"\n})\nexport class AppComponent {\n    title = \"Ben and Hayley's Wedding\";\n    userName: string;\n\n    constructor(public router: Router, public authService: AuthService, public zone: NgZone) {\n        if (!(<any>window).externalProviderLogin) {\n            var self = this;\n\n            (<any>window).externalProviderLogin = function (auth) {\n                self.zone.run(() => {\n                    self.externalProviderLogin(auth);\n                });\n            }\n        }\n    }\n    \n    getUserName(): string {\n        if (this.isLoggedIn()) {\n            this.authService.get().subscribe(\n                user => {\n                    if (user.IsSocialLogin) {\n                        return user.Email;\n                    }\n                    else {\n                        return user.UserName;\n                    }\n                }\n            );\n        }\n        return \"\";\n    }\n\n    isActive(data: any[]): boolean {\n        return this.router.isActive(this.router.createUrlTree(data), true);       \n    }\n\n    isLoggedIn(): boolean {\n        return this.authService.isLoggedIn();\n    }\n\n    logout(): boolean {\n        this.authService.logout().subscribe(result => {\n\n            if (result) {\n                this.router.navigate([\"\"]);\n            }\n        });\n           \n        return false;\n    }\n\n    externalProviderLogin(auth: any) {\n        this.authService.setAuth(auth);\n\n        console.log(\"External Login successful! Provider: \" + this.authService.getAuth().providerName);\n        this.router.navigate([\"\"]);\n    }\n} "]}