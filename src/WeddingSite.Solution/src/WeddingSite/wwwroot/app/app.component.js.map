{"version":3,"sources":["app.component.ts"],"names":["AppComponent","router","authService","zone","this","title","window","externalProviderLogin","self","auth","run","currentUserName","getUserName","prototype","isLoggedIn","get","subscribe","user","IsSocialLogin","Email","UserName","isActive","data","createUrlTree","logout","_this","result","navigate","setAuth","console","log","getAuth","providerName","__decorate","core_1","Component","moduleId","__moduleName","selector","templateUrl","router_1","Router","auth_service_1","AuthService","NgZone"],"mappings":"08BAUAA,aAAA,WAII,QAAAA,cAAmBC,OAAuBC,YAAiCC,MACvE,GADeC,KAAAH,OAAAA,OAAuBG,KAAAF,YAAAA,YAAiCE,KAAAD,KAAAA,KAH3EC,KAAAC,MAAQ,4BAIOC,OAAQC,sBAAuB,CACtC,GAAIC,MAAOJ,IAELE,QAAQC,sBAAwB,SAAUE,MAC5CD,KAAKL,KAAKO,IAAI,WACVF,KAAKD,sBAAsBE,SAIvCL,KAAKO,gBAAkBP,KAAKQ,cA4CpC,MAzCIZ,cAAAa,UAAAD,YAAA,WAaI,MAZIR,MAAKU,cACLV,KAAKF,YAAYa,MAAMC,UACnB,SAAAC,MACI,MAAIA,MAAKC,cACE,UAAYD,KAAKE,MAGjB,SAAWF,KAAKG,WAKhC,UAGXpB,aAAAa,UAAAQ,SAAA,SAASC,MACL,MAAOlB,MAAKH,OAAOoB,SAASjB,KAAKH,OAAOsB,cAAcD,OAAO,IAGjEtB,aAAAa,UAAAC,WAAA,WACI,MAAOV,MAAKF,YAAYY,cAG5Bd,aAAAa,UAAAW,OAAA,WAAA,GAAAC,OAAArB,IAQI,OAPAA,MAAKF,YAAYsB,SAASR,UAAU,SAAAU,QAE5BA,QACAD,MAAKxB,OAAO0B,UAAU,QAIvB,GAGX3B,aAAAa,UAAAN,sBAAA,SAAsBE,MAClBL,KAAKF,YAAY0B,QAAQnB,MAEzBoB,QAAQC,IAAI,wCAA0C1B,KAAKF,YAAY6B,UAAUC,cACjF5B,KAAKH,OAAO0B,UAAU,MAE9B3B,gBA1DAA,aAAAiC,YALCC,OAAAC,WACGC,SAAUC,aACVC,SAAU,cACVC,YAAa,uDAMcC,SAAAC,OAA4BC,eAAAC,YAA0BT,OAAAU,iDAJxE5C","file":"app.component.js","sourcesContent":["import {Component, NgZone} from \"@angular/core\";\r\nimport {Router} from \"@angular/router\";\r\nimport {AuthService} from \"./auth.service\";\r\nimport {User} from \"./model/user\";\r\n\r\n@Component({\r\n    moduleId: __moduleName,\r\n    selector: \"weddingsite\",\r\n    templateUrl: \"app.component.html\"\r\n})\r\nexport class AppComponent {\r\n    title = \"Ben and Hayley's Wedding\";\r\n    currentUserName: string;\r\n\r\n    constructor(public router: Router, public authService: AuthService, public zone: NgZone) {\r\n        if (!(<any>window).externalProviderLogin) {\r\n            var self = this;\r\n\r\n            (<any>window).externalProviderLogin = function (auth) {\r\n                self.zone.run(() => {\r\n                    self.externalProviderLogin(auth);\r\n                });\r\n            }\r\n        }\r\n        this.currentUserName = this.getUserName();\r\n    }\r\n    \r\n    getUserName(): string {\r\n        if (this.isLoggedIn()) {\r\n            this.authService.get().subscribe(\r\n                user => {\r\n                    if (user.IsSocialLogin) {\r\n                        return \"Logout \" + user.Email;\r\n                    }\r\n                    else {\r\n                        return \"Logout\" + user.UserName;\r\n                    }\r\n                }\r\n            );\r\n        }\r\n        return \"Logout\";\r\n    }\r\n\r\n    isActive(data: any[]): boolean {\r\n        return this.router.isActive(this.router.createUrlTree(data), true);       \r\n    }\r\n\r\n    isLoggedIn(): boolean {\r\n        return this.authService.isLoggedIn();\r\n    }\r\n\r\n    logout(): boolean {\r\n        this.authService.logout().subscribe(result => {\r\n\r\n            if (result) {\r\n                this.router.navigate([\"\"]);\r\n            }\r\n        });\r\n           \r\n        return false;\r\n    }\r\n\r\n    externalProviderLogin(auth: any) {\r\n        this.authService.setAuth(auth);\r\n\r\n        console.log(\"External Login successful! Provider: \" + this.authService.getAuth().providerName);\r\n        this.router.navigate([\"\"]);\r\n    }\r\n} "]}