{"version":3,"sources":["login.component.ts"],"names":["LoginComponent","fb","router","authService","this","title","loginForm","loginError","externalProviderWindow","isLoggedIn","navigate","group","username","forms_1","Validators","required","password","prototype","performLogin","e","_this","preventDefault","value","login","subscribe","data","auth","getAuth","alert","access_token","err","console","log","callExternalLogin","providerName","url","w","screen","width","h","height","params","close","window","open","onRegister","__decorate","core_1","Component","moduleId","__moduleName","selector","templateUrl","FormBuilder","router_1","Router","auth_service_1","AuthService"],"mappings":"4gCAWAA,eAAA,WAMI,QAAAA,gBAAoBC,GAAyBC,OAAwBC,aAAjDC,KAAAH,GAAAA,GAAyBG,KAAAF,OAAAA,OAAwBE,KAAAD,YAAAA,YALrEC,KAAAC,MAAQ,QACRD,KAAAE,UAAY,KACZF,KAAAG,YAAa,EACbH,KAAAI,uBAAyB,KAGjBJ,KAAKD,YAAYM,cACjBL,KAAKF,OAAOQ,UAAU,KAE1BN,KAAKE,UAAYL,GAAGU,OAChBC,UAAW,GAAIC,QAAAC,WAAWC,UAC1BC,UAAW,GAAIH,QAAAC,WAAWC,YAyCtC,MArCIf,gBAAAiB,UAAAC,aAAA,SAAaC,GAAb,GAAAC,OAAAhB,IACIe,GAAEE,gBAEF,IAAIT,UAAWR,KAAKE,UAAUgB,MAAMV,SAChCI,SAAWZ,KAAKE,UAAUgB,MAAMN,QAEpCZ,MAAKD,YAAYoB,MAAMX,SAAUI,UAC5BQ,UAAU,SAACC,MACJL,MAAKb,YAAa,CAClB,IAAImB,MAAON,MAAKjB,YAAYwB,SAC5BC,OAAM,iBAAmBF,KAAKG,cAC9BT,MAAKlB,OAAOQ,UAAU,MAE1B,SAACoB,KACGC,QAAQC,IAAIF,KACZV,MAAKb,YAAa,KAIlCP,eAAAiB,UAAAgB,kBAAA,SAAkBC,cACd,GAAIC,KAAM,8BAAgCD,aAEtCE,EAAKC,OAAOC,OAAS,KAAQ,KAAOD,OAAOC,MAC3CC,EAAKF,OAAOG,QAAU,IAAO,IAAMH,OAAOG,OAE1CC,OAAS,oDAAsDL,EAAI,YAAcG,CAEjFnC,MAAKI,wBACLJ,KAAKI,uBAAuBkC,QAGhCtC,KAAKI,uBAAyBmC,OAAOC,KAAKT,IAAK,mBAAoBM,QAAQ,IAG/EzC,eAAAiB,UAAA4B,WAAA,WACIzC,KAAKF,OAAOQ,UAAU,cAE9BV,kBArDAA,eAAA8C,YALCC,OAAAC,WACGC,SAAUC,aACVC,SAAU,QACVC,YAAa,yDAQWvC,QAAAwC,YAA6BC,SAAAC,OAA6BC,eAAAC,0DANzEzD","file":"login.component.js","sourcesContent":["import {Component} from \"@angular/core\";\r\nimport {FormBuilder, Validators} from \"@angular/forms\";\r\nimport {Router} from \"@angular/router\";\r\nimport {AuthService} from \"./auth.service\";\r\nimport {UserEditComponent} from \"./user-edit.component\";\r\n\r\n@Component({\r\n    moduleId: __moduleName,\r\n    selector: \"login\",\r\n    templateUrl: \"login.component.html\"\r\n})\r\nexport class LoginComponent {\r\n    title = \"Login\";\r\n    loginForm = null;\r\n    loginError = false;\r\n    externalProviderWindow = null;\r\n\r\n    constructor(private fb: FormBuilder, private router: Router, private authService: AuthService) {\r\n        if (this.authService.isLoggedIn()) {\r\n            this.router.navigate([\"\"]);\r\n        }\r\n        this.loginForm = fb.group({\r\n            username: [\"\", Validators.required],\r\n            password: [\"\", Validators.required]\r\n        });\r\n    }\r\n\r\n    performLogin(e) {\r\n        e.preventDefault();\r\n\r\n        var username = this.loginForm.value.username;\r\n        var password = this.loginForm.value.password;\r\n\r\n        this.authService.login(username, password)\r\n            .subscribe((data) => {\r\n                    this.loginError = false;\r\n                    var auth = this.authService.getAuth();\r\n                    alert(\"Our Token is: \" + auth.access_token);\r\n                    this.router.navigate([\"\"]);\r\n                },\r\n                (err) => {\r\n                    console.log(err);\r\n                    this.loginError = true;\r\n                });\r\n    }\r\n\r\n    callExternalLogin(providerName: string) {\r\n        var url = \"api/Accounts/ExternalLogin/\" + providerName;\r\n\r\n        var w = (screen.width >= 1050) ? 1050 : screen.width;\r\n        var h = (screen.height >= 550) ? 550 : screen.height;\r\n\r\n        var params = \"toolbar=yes, scrollbars=yes, resizable=yes,width=\" + w + \", height=\" + h;\r\n\r\n        if (this.externalProviderWindow) {\r\n            this.externalProviderWindow.close();\r\n        }\r\n        //this is not great in production = use proper SDK from facebook or google OAuth2 javascript SDK.\r\n        this.externalProviderWindow = window.open(url, \"ExternalProvider\", params, false);\r\n    }\r\n\r\n    onRegister() {\r\n        this.router.navigate([\"register\"]);\r\n    }\r\n} "]}